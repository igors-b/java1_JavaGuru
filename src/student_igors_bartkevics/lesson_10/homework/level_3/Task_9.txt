@CodeReview(approved = true)

Найдите в интернете информацию про класс java.util.Optional.
Для чего применяются объекты этого класса?
-------------------------------------------------------------------------------------------------
Optional - класс в пакете java.util, является контейнером (оберткой) для значений
который также может безопасно содержать null.
Optional используется в случаях когда возвращаемое методом значение вместо ожидаемого
объекта может быть null. Чтобы не делать многочисленные проверки на null и Null Pointer Exception
используют объект класса Optional чтобы представить null отсутствующим значением, заменить его
дефолтным значением или выполнить дефолтное действие.
Благодаря опциональным типам можно забыть про проверки на null и NullPointerException.
==================================================================================================

Какие два состояния могут быть у объектов этого класса?
--------------------------------------------------------------------------------------------------
Объект класса Optional может быть пустым, а может иметь значение (объект)
==================================================================================================

Как создаются экземпляры данного класса?
--------------------------------------------------------------------------------------------------
Пустой объект класса Optional создаётся следующим образом:
Optional<type> empty = Optional.empty();

Объект класса Optional который содержит объект создаётся следующим образом:
Optional<type> optional = Optional.of(value);
==================================================================================================

Как можно проверить в каком состоянии находится экземпляр данного класса?
--------------------------------------------------------------------------------------------------
Проверить в каком состоянии находится экземпляр данного класса можно при помощи метода isPresent():

    Optional<String> opt1 = Optional.of("I am value of the Optional object");
    boolean result = opt1.isPresent(); // true

    Optional<String> opt2 = Optional.ofNullable(null);
    boolean result = opt2.isPresent(); // false, empty object

==================================================================================================

Как можно получить объект, который находится внутри Optional?
--------------------------------------------------------------------------------------------------
Получить объект, который находится внутри Optional можно при помощи метода get():

    Optional<String> opt = Optional.of("I am value of the Optional object");
    String value = opt.get();
==================================================================================================