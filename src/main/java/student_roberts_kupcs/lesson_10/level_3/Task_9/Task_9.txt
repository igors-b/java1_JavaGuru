Найдите в интернете информацию про класс java.util.Optional.
//В JDK 8 был введён новый утилитарный класс java.util.Optional,
целями которого являются повышение null-safety и читаемости кода
при работе со ссылками, значения которых могут быть null.

Для чего применяются объекты этого класса?
//Optional — это футляр для некоторого объекта
//объект-контейнер, используемый для содержания ненулевых объектов.
//Optional объект используется для представления null с отсутствующим значением.

Какие два состояния могут быть у объектов этого класса?
//Они либо содержат объект, либо имеют значение null.

Как создаются экземпляры данного класса?
//Optional.empty()
//public Optional<String> getClient() {
     return Optional.empty();
  }

//Optional.of(T value)
//public Optional<String> getClient() {
     return Optional.of(null);
  }

//Optional.ofNullable(T value)
//public Optional<Client> getClient(String username) {
     Client client = Client.find()
              .where()
              .eq("username", username)
              .fetchUnique();

     return Optional.ofNullable(client);
  }

Как можно проверить в каком состоянии находится экземпляр данного класса?
//isPresent()
Возвращает булево значение true если в опционале значение есть
и возвращает false если в опционале значение null.

Как можно получить объект, который находится внутри Optional?
//orElse(T other)
