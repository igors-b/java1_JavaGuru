
  Типизированные и нетипизированные языки программирования! Типизация Java!

Языки программирования по типизации принято делить на два больших лагеря — типизированные и нетипизированные (бестиповые).
К первому например относятся C, Java, Python, Scala, PHP и Lua, а ко второму — язык ассемблера, Forth .

Нетипизированные или бестиповые языки, как правило — очень старые низкоуровневые языки,
на которых программы являются набором машинных команд и пишутся, в основном,
для взаимодействия с аппаратным обеспечением. Бестиповые языки позволяют производить
любые операции над любыми данными, которые представлены в них как цепочки бит произвольной длины.


 типизированные языки разделяются еще на несколько пересекающихся категорий:

      * Статическая / динамическая типизация.

        Статическая определяется тем, что конечные типы переменных
        и функций устанавливаются на этапе компиляции.
        Т.е. уже компилятор на 100% уверен, какой тип где находится.
        В динамической типизации все типы выясняются уже во время выполнения программы.

            Примеры:
            Статическая: C, Java, C#;
            Динамическая: Python, JavaScript, Ruby.


      * Сильная / слабая типизация (также иногда говорят строгая / нестрогая).
        Сильная типизация выделяется тем, что язык не позволяет смешивать в выражениях
        различные типы и не выполняет автоматические неявные преобразования,
        например нельзя вычесть из строки множество.
        Языки со слабой типизацией выполняют множество неявных преобразований автоматически,
        даже если может произойти потеря точности или преобразование неоднозначно.

            Примеры:
            Сильная: Java, Python, Haskell, Lisp;
            Слабая: C, JavaScript, Visual Basic, PHP.


      * Явная / неявная типизация.
        Явно-типизированные языки отличаются тем, что тип новых переменных / функций /
        их аргументов нужно задавать явно. Соответственно языки с неявной типизацией
        перекладывают эту задачу на компилятор / интерпретатор.

            Примеры:
            Явная: C++, D, C#, Java
            Неявная: PHP, Lua, JavaScript

 Вывод:Типизация Java - типизированая ,статическая ,строгая, явная..
 Конечные типы переменных и функций устанавливаются на этапе компиляции,язык не позволяет смешивать в выражениях
 различные типы и не выполняет автоматические неявные преобразования,тип новых переменных
 / функций /их аргументов нужно задавать явно.

  Ссылки на ресурсы  - https://habr.com/ru/post/161205/
                     - https://xsltdev.ru/typescript/ts38/06/
